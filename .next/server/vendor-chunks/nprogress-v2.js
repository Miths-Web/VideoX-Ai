"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/nprogress-v2";
exports.ids = ["vendor-chunks/nprogress-v2"];
exports.modules = {

/***/ "(ssr)/./node_modules/nprogress-v2/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/nprogress-v2/dist/index.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  NProgress: () => NProgress\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/utils.ts\nfunction clamp(n, min, max) {\n  return Math.max(min, Math.min(n, max));\n}\nfunction toBarPerc(n, direction) {\n  if (direction === \"rtl\") return (1 - n) * 100;\n  return (-1 + n) * 100;\n}\nfunction css(element, properties, value) {\n  if (typeof properties === \"string\") {\n    if (value !== void 0) {\n      element.style[properties] = value;\n    }\n  } else {\n    for (const prop in properties) {\n      if (properties.hasOwnProperty(prop)) {\n        const val = properties[prop];\n        if (val !== void 0) {\n          element.style[prop] = val;\n        }\n      }\n    }\n  }\n}\nfunction addClass(element, name) {\n  element.classList.add(name);\n}\nfunction removeClass(element, name) {\n  element.classList.remove(name);\n}\nfunction removeElement(element) {\n  if (element && element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n}\n\n// src/progress.ts\nvar NProgress = class {\n  static settings = {\n    minimum: 0.08,\n    maximum: 1,\n    // If template is null, the user can insert their own template in the DOM.\n    template: `<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div>\n               <div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>`,\n    easing: \"linear\",\n    positionUsing: \"\",\n    speed: 200,\n    trickle: true,\n    trickleSpeed: 200,\n    showSpinner: true,\n    barSelector: '[role=\"bar\"]',\n    spinnerSelector: '[role=\"spinner\"]',\n    parent: \"body\",\n    direction: \"ltr\"\n  };\n  static status = null;\n  // Queue for animation functions\n  static pending = [];\n  static isPaused = false;\n  // Configure NProgress with new options\n  static configure(options) {\n    Object.assign(this.settings, options);\n    return this;\n  }\n  // Check if NProgress has started\n  static isStarted() {\n    return typeof this.status === \"number\";\n  }\n  /**\n   * Set the progress status.\n   * This method updates the progress status for every progress element present in the DOM.\n   * If a template is provided, it will create a new progress element if one does not already exist.\n   * If the template is null, it relies on user-inserted elements.\n   */\n  static set(n) {\n    if (this.isPaused) return this;\n    const started = this.isStarted();\n    n = clamp(n, this.settings.minimum, this.settings.maximum);\n    this.status = n === this.settings.maximum ? null : n;\n    const progressElements = this.render(!started);\n    const speed = this.settings.speed;\n    const ease = this.settings.easing;\n    progressElements.forEach((progress) => progress.offsetWidth);\n    this.queue((next) => {\n      progressElements.forEach((progress) => {\n        const bar = progress.querySelector(\n          this.settings.barSelector\n        );\n        css(bar, this.barPositionCSS({ n, speed, ease }));\n      });\n      if (n === this.settings.maximum) {\n        progressElements.forEach((progress) => {\n          css(progress, { transition: \"none\", opacity: \"1\" });\n          progress.offsetWidth;\n        });\n        setTimeout(() => {\n          progressElements.forEach((progress) => {\n            css(progress, {\n              transition: `all ${speed}ms ${ease}`,\n              opacity: \"0\"\n            });\n          });\n          setTimeout(() => {\n            progressElements.forEach((progress) => {\n              this.remove(progress);\n              if (this.settings.template === null) {\n                css(progress, { transition: \"none\", opacity: \"1\" });\n              }\n            });\n            next();\n          }, speed);\n        }, speed);\n      } else {\n        setTimeout(next, speed);\n      }\n    });\n    return this;\n  }\n  // Start the progress bar\n  static start() {\n    if (!this.status) this.set(0);\n    const work = () => {\n      if (this.isPaused) return;\n      setTimeout(() => {\n        if (!this.status) return;\n        this.trickle();\n        work();\n      }, this.settings.trickleSpeed);\n    };\n    if (this.settings.trickle) work();\n    return this;\n  }\n  // Complete the progress\n  static done(force) {\n    if (!force && !this.status) return this;\n    return this.inc(0.3 + 0.5 * Math.random()).set(1);\n  }\n  // Increment the progress\n  static inc(amount) {\n    if (this.isPaused) return this;\n    let n = this.status;\n    if (!n) {\n      return this.start();\n    } else if (n > 1) {\n      return this;\n    } else {\n      if (typeof amount !== \"number\") {\n        if (n >= 0 && n < 0.2) {\n          amount = 0.1;\n        } else if (n >= 0.2 && n < 0.5) {\n          amount = 0.04;\n        } else if (n >= 0.5 && n < 0.8) {\n          amount = 0.02;\n        } else if (n >= 0.8 && n < 0.99) {\n          amount = 5e-3;\n        } else {\n          amount = 0;\n        }\n      }\n      n = clamp(n + amount, 0, 0.994);\n      return this.set(n);\n    }\n  }\n  // Advance the progress (trickle)\n  static trickle() {\n    if (this.isPaused) return this;\n    return this.inc();\n  }\n  // Handle jQuery promises (for compatibility)\n  static promise($promise) {\n    if (!$promise || $promise.state() === \"resolved\") {\n      return this;\n    }\n    let initial = 0, current = 0;\n    if (current === 0) {\n      this.start();\n    }\n    initial++;\n    current++;\n    $promise.always(() => {\n      current--;\n      if (current === 0) {\n        initial = 0;\n        this.done();\n      } else {\n        this.set((initial - current) / initial);\n      }\n    });\n    return this;\n  }\n  /**\n   * Renders the NProgress component.\n   * If a template is provided, it will create a progress element if none exists in the parent.\n   * If the template is null, it relies on the user to insert their own elements marked with the \"nprogress\" class.\n   */\n  static render(fromStart = false) {\n    const parent = typeof this.settings.parent === \"string\" ? document.querySelector(this.settings.parent) : this.settings.parent;\n    let progressElements = parent ? Array.from(parent.querySelectorAll(\".nprogress\")) : [];\n    if (this.settings.template !== null && progressElements.length === 0) {\n      addClass(document.documentElement, \"nprogress-busy\");\n      const progress = document.createElement(\"div\");\n      addClass(progress, \"nprogress\");\n      progress.innerHTML = this.settings.template;\n      if (parent !== document.body) {\n        addClass(parent, \"nprogress-custom-parent\");\n      }\n      parent.appendChild(progress);\n      progressElements.push(progress);\n    }\n    progressElements.forEach((progress) => {\n      if (this.settings.template === null) {\n        progress.style.display = \"\";\n      }\n      addClass(document.documentElement, \"nprogress-busy\");\n      if (parent !== document.body) {\n        addClass(parent, \"nprogress-custom-parent\");\n      }\n      const bar = progress.querySelector(\n        this.settings.barSelector\n      );\n      const perc = fromStart ? toBarPerc(0, this.settings.direction) : toBarPerc(this.status || 0, this.settings.direction);\n      css(\n        bar,\n        this.barPositionCSS({\n          n: this.status || 0,\n          speed: this.settings.speed,\n          ease: this.settings.easing,\n          perc\n        })\n      );\n      if (!this.settings.showSpinner) {\n        const spinner = progress.querySelector(\n          this.settings.spinnerSelector\n        );\n        spinner && removeElement(spinner);\n      }\n    });\n    return progressElements;\n  }\n  /**\n   * Remove the progress element from the DOM.\n   * If a progress element is provided, only that element is removed;\n   * otherwise, all progress elements and associated classes are removed.\n   * For user-provided templates (when settings.template === null), the element\n   * is hidden instead of being removed.\n   */\n  static remove(progressElement) {\n    if (progressElement) {\n      if (this.settings.template === null) {\n        progressElement.style.display = \"none\";\n      } else {\n        removeElement(progressElement);\n      }\n    } else {\n      removeClass(document.documentElement, \"nprogress-busy\");\n      const parent = typeof this.settings.parent === \"string\" ? document.querySelectorAll(this.settings.parent) : [this.settings.parent];\n      parent.forEach((p) => {\n        removeClass(p, \"nprogress-custom-parent\");\n      });\n      const progresses = document.querySelectorAll(\".nprogress\");\n      progresses.forEach((progress) => {\n        const elem = progress;\n        if (this.settings.template === null) {\n          elem.style.display = \"none\";\n        } else {\n          removeElement(elem);\n        }\n      });\n    }\n  }\n  // Pause the progress\n  static pause() {\n    this.isPaused = true;\n    return this;\n  }\n  // Resume the progress\n  static resume() {\n    this.isPaused = false;\n    return this;\n  }\n  // Check if NProgress is rendered in the DOM\n  static isRendered() {\n    return document.querySelectorAll(\".nprogress\").length > 0;\n  }\n  // Determine the CSS positioning method to use\n  static getPositioningCSS() {\n    const bodyStyle = document.body.style;\n    const vendorPrefix = \"WebkitTransform\" in bodyStyle ? \"Webkit\" : \"MozTransform\" in bodyStyle ? \"Moz\" : \"msTransform\" in bodyStyle ? \"ms\" : \"OTransform\" in bodyStyle ? \"O\" : \"\";\n    if (`${vendorPrefix}Perspective` in bodyStyle) {\n      return \"translate3d\";\n    } else if (`${vendorPrefix}Transform` in bodyStyle) {\n      return \"translate\";\n    } else {\n      return \"margin\";\n    }\n  }\n  // Queue function for animations\n  static queue(fn) {\n    this.pending.push(fn);\n    if (this.pending.length === 1) this.next();\n  }\n  static next() {\n    const fn = this.pending.shift();\n    if (fn) fn(this.next.bind(this));\n  }\n  static initPositionUsing() {\n    if (this.settings.positionUsing === \"\") {\n      this.settings.positionUsing = this.getPositioningCSS();\n    }\n  }\n  // Compute the CSS for positioning the bar\n  static barPositionCSS({\n    n,\n    speed,\n    ease,\n    perc\n  }) {\n    this.initPositionUsing();\n    let barCSS = {};\n    const computedPerc = perc ?? toBarPerc(n, this.settings.direction);\n    if (this.settings.positionUsing === \"translate3d\") {\n      barCSS = {\n        transform: `translate3d(${computedPerc}%,0,0)`\n      };\n    } else if (this.settings.positionUsing === \"translate\") {\n      barCSS = {\n        transform: `translate(${computedPerc}%,0)`\n      };\n    } else if (this.settings.positionUsing === \"width\") {\n      barCSS = {\n        width: `${this.settings.direction === \"rtl\" ? 100 - computedPerc : computedPerc + 100}%`,\n        ...this.settings.direction === \"rtl\" ? { right: \"0\", left: \"auto\" } : {}\n      };\n    } else if (this.settings.positionUsing === \"margin\") {\n      barCSS = this.settings.direction === \"rtl\" ? { \"margin-left\": `${-computedPerc}%` } : { \"margin-right\": `${-computedPerc}%` };\n    }\n    barCSS.transition = `all ${speed}ms ${ease}`;\n    return barCSS;\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/nprogress-v2/dist/index.js\n");

/***/ })

};
;